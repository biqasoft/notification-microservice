# server
spring.application.name=notification-email-sender
server.port=10019
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint}  %clr([%X{RequestId}]){faint} %clr([%X{currentUserId}]){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

# disable logging
logging.level.springfox = ERROR
logging.level.org.springframework.web.servlet.mvc.method.annotation = WARN
logging.level.org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = WARN
logging.level.org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping = WARN
logging.level.org.springframework.context.annotation.AnnotationConfigApplicationContext = WARN
logging.level.org.springframework.context.support.PostProcessorRegistrationDelegate = WARN

# spring actuator
management.context-path=/internal
#management.port=10002

# disable jmx
endpoints.jmx.enabled=false
spring.jmx.enabled=false

# disable session
security.sessions=never
management.security.sessions=never

# consul service discovery
spring.cloud.consul.discovery.heartbeat.enabled=true
spring.cloud.consul.discovery.prefer-ip-address=true
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.service-name=notification-email-sender
spring.cloud.consul.discovery.health-check-timeout=5
spring.cloud.consul.discovery.health-check-path=/internal/health

management.security.enabled=false
management.add-application-context-header=false